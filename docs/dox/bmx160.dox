/*
    ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

/**
 * @defgroup BMX160 BMX160 Driver
 * @brief Bosch 9-axis sensor driver.
 * @details Detail will be writen soon
 * @pre     In order to use this driver the @p USE_BMX160_MODULE option
 *          must be enabled in @p config.h.
 *
 * @section bmx160_1 Stateflow
 * The driver implements a state machine internally, not all the driver
 * functionalities can be used in any moment, any transition not explicitly
 * shown in the following diagram has to be considered an error and shall
 * be captured by an assertion (if enabled).
 * @if LATEX_PDF
 * @dot
  digraph example {
    rankdir="LR";
    size="5, 7";

    node [shape=circle, fontname=Helvetica, fontsize=8, fixedsize="true", width="0.9", height="0.9"];
    edge [fontname=Helvetica, fontsize=8];

    stop  [label="BMX160_STOP"];
    init [label="BMX160_INIT", style="bold"];
    ready [label="BMX160_READY"];
    calibration [label="BMX160_CALIB"]
    read [label="BMX160_READ\n100Hz"]
    calculate[label="BMX1160_CALC"]
    
    
    stop ->  init[label="\n start_bmx160_module()", constraint=false];
    init-> ready [label="\bmx160_full_init()"];
   
    ready -> calibration [label="if (bmx160.calib_flag == 1)\n bmx160_mag_calibration()"]
    ready->read[label="bmi160_get_sensor_data()\nbmm150_read_mag_data\n"]
    read->calculate[label="FusionAhrsUpdate()"]
    calculate->ready
    calibration -> ready [label="bmx160_save_calib_to_eeprom()"]
   }
 * @enddot
 * @else
 * @dot
  digraph example {
    rankdir="LR";

    node [shape=circle, fontname=Helvetica, fontsize=8, fixedsize="true", width="0.9", height="0.9"];
    edge [fontname=Helvetica, fontsize=8];

    stop  [label="BMX160_STOP"];
    init [label="BMX160_INIT", style="bold"];
    ready [label="BMX160_READY"];
    calibration [label="BMX160_CALIB"]
    read [label="BMX160_READ\n100Hz"]
    calculate[label="BMX1160_CALC"]
    
    
    stop ->  init[label="\nstart_bmx160_module()", constraint=false];
    init-> ready [label="\bmx160_full_init()"];
   
    ready -> calibration [label="if (bmx160.calib_flag == 1)\n bmx160_mag_calibration()"]
    ready->read[label="bmi160_get_sensor_data()\nbmm150_read_mag_data\n"]
    read->calculate[label="FusionAhrsUpdate()"]
    calculate->ready
    calibration -> ready [label="bmx160_save_calib_to_eeprom()"]
   }
 * @enddot
 * @endif
 *
 * @section bmx160_2 Driver Operations
 *  
 */
