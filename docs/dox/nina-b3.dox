/*
    ChibiOS - Copyright (C) 2006..2018 Giovanni Di Sirio

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
*/

/**
 * @defgroup NINA-B3 Ublox NINA-B3 Device
 * @ingroup HAL_BLOCKS
 ** @brief Ublox BLE module driver.
 * @details Detail will be writen soon
 * @pre     In order to use the ADC driver the @p USE_UBLOX_BLE_MODULE option
 *          must be enabled in @p config.h.
 * @section ble_1 Stateflow
 * The drivers implementing this interface shall implement the following
 * state machine internally. Not all the driver functionalities can be used
 * in any moment, any transition not explicitly shown in the following
 * diagram has to be considered an error and shall be captured by an
 * assertion (if enabled).
 * @if LATEX_PDF
 * @dot
digraph example {
    rankdir="LR";
    size="5, 7";

    node [shape=circle, fontname=Helvetica, fontsize=8, fixedsize="true", width="0.9", height="0.9"];
    edge [fontname=Helvetica, fontsize=8];

    init [label="BLE_INIT", style="bold"];
    ready [label="BLE_READY\n"];
    observe [label="BLE_OBSERVE"]
    connect [label="BLE_CONNECT"]
    parse [label="BLE_PARSE"]
    notify [label="BLE_NOTIFY"]
  
    
    init -> ready [label="\n start_ble_module()", constraint=false];
    ready -> observe [label="virtual_timer_callback"]
    observe -> ready [label=""]
    observe -> connect [label="dev_addr compared"]
    connect -> ready [label=""]
    ready -> notify [label="virtual_timer_callback", constraint=false]
    notify -> ready [label="", constraint=false]
    ready -> parse [label="nina_parse_notification()\n"]
    parse -> ready [label="", constraint=false]
}
 * @enddot
 * @else
 * @dot
  digraph example {
    rankdir="LR";

    node [shape=circle, fontname=Helvetica, fontsize=8, fixedsize="true", width="0.9", height="0.9"];
    edge [fontname=Helvetica, fontsize=8];

    init [label="BLE_INIT", style="bold"];
    ready [label="BLE_READY\n"];
    observe [label="BLE_OBSERVE"]
    connect [label="BLE_CONNECT"]
    parse [label="BLE_PARSE"]
    notify [label="BLE_NOTIFY"]
  
    
    init -> ready [label="\n start_ble_module()", constraint=false];
    ready -> observe [label="virtual_timer_callback"]
    observe -> ready [label=""]
    observe -> connect [label="dev_addr compared"]
    connect -> ready [label=""]
    ready -> notify [label="virtual_timer_callback", constraint=false]
    notify -> ready [label="", constraint=false]
    ready -> parse [label="nina_parse_notification()\n"]
    parse -> ready [label="", constraint=false]
}
 * @enddot
 * @endif
 */
